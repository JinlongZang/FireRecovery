//upload and import global GLASS LAI median mosaics (250m, 2000-2021)
//import global AVHRR LAI and FPAR medians before 2000 (AVHRR LAI and FPAR: 1981-06-24â€“2013-12-31,scale = 0.001,5km)
var LAI5km_1995_ = ee.ImageCollection('NOAA/CDR/AVHRR/LAI_FAPAR/V5')
                  .filter(ee.Filter.date('1995-01-01', '1995-12-31')).select('LAI').median().multiply(0.01);
var LAI5km_1990_ = ee.ImageCollection('NOAA/CDR/AVHRR/LAI_FAPAR/V5')
                  .filter(ee.Filter.date('1990-01-01', '1990-12-31')).select('LAI').median().multiply(0.01);
var LAI5km_1985_ = ee.ImageCollection('NOAA/CDR/AVHRR/LAI_FAPAR/V5')
                  .filter(ee.Filter.date('1985-01-01', '1985-12-31')).select('LAI').median().multiply(0.01);
var LAI5km_1982_ = ee.ImageCollection('NOAA/CDR/AVHRR/LAI_FAPAR/V5')
                  .filter(ee.Filter.date('1982-01-01', '1982-12-31')).select('LAI').median().multiply(0.01);
var LAI5km_1989_ = ee.ImageCollection('NOAA/CDR/AVHRR/LAI_FAPAR/V5')
                  .filter(ee.Filter.date('1989-01-01', '1989-12-31')).select('LAI').median().multiply(0.01);
var LAI5km_1991_ = ee.ImageCollection('NOAA/CDR/AVHRR/LAI_FAPAR/V5')
                  .filter(ee.Filter.date('1991-01-01', '1991-12-31')).select('LAI').median().multiply(0.01);
var LAI5km_1994_ = ee.ImageCollection('NOAA/CDR/AVHRR/LAI_FAPAR/V5')
                  .filter(ee.Filter.date('1994-01-01', '1994-12-31')).select('LAI').median().multiply(0.01);                  
var LAI5km_1996_ = ee.ImageCollection('NOAA/CDR/AVHRR/LAI_FAPAR/V5')
                  .filter(ee.Filter.date('1996-01-01', '1996-12-31')).select('LAI').median().multiply(0.01);                      
var LAI5km_1999_ = ee.ImageCollection('NOAA/CDR/AVHRR/LAI_FAPAR/V5')
                  .filter(ee.Filter.date('1999-01-01', '1999-12-31')).select('LAI').median().multiply(0.01);    
var FPAR5km_1995_ = ee.ImageCollection('NOAA/CDR/AVHRR/LAI_FAPAR/V5')
                  .filter(ee.Filter.date('1995-01-01', '1995-12-31')).select('FAPAR').median().multiply(0.25);
var FPAR5km_1990_ = ee.ImageCollection('NOAA/CDR/AVHRR/LAI_FAPAR/V5')
                  .filter(ee.Filter.date('1990-01-01', '1990-12-31')).select('FAPAR').median().multiply(0.25);
var FPAR5km_1985_ = ee.ImageCollection('NOAA/CDR/AVHRR/LAI_FAPAR/V5')
                  .filter(ee.Filter.date('1985-01-01', '1985-12-31')).select('FAPAR').median().multiply(0.25);
var FPAR5km_1982_ = ee.ImageCollection('NOAA/CDR/AVHRR/LAI_FAPAR/V5')
                  .filter(ee.Filter.date('1982-01-01', '1982-12-31')).select('FAPAR').median().multiply(0.25);
var FPAR5km_1989_ = ee.ImageCollection('NOAA/CDR/AVHRR/LAI_FAPAR/V5')
                  .filter(ee.Filter.date('1989-01-01', '1989-12-31')).select('FAPAR').median().multiply(0.25);
var FPAR5km_1991_ = ee.ImageCollection('NOAA/CDR/AVHRR/LAI_FAPAR/V5')
                  .filter(ee.Filter.date('1991-01-01', '1991-12-31')).select('FAPAR').median().multiply(0.25);
var FPAR5km_1994_ = ee.ImageCollection('NOAA/CDR/AVHRR/LAI_FAPAR/V5')
                  .filter(ee.Filter.date('1994-01-01', '1994-12-31')).select('FAPAR').median().multiply(0.25);
var FPAR5km_1996_ = ee.ImageCollection('NOAA/CDR/AVHRR/LAI_FAPAR/V5')
                  .filter(ee.Filter.date('1996-01-01', '1996-12-31')).select('FAPAR').median().multiply(0.25);
var FPAR5km_1999_ = ee.ImageCollection('NOAA/CDR/AVHRR/LAI_FAPAR/V5')
                  .filter(ee.Filter.date('1999-01-01', '1999-12-31')).select('FAPAR').median().multiply(0.25);
var resample = function(image) {var resampledImage = image.resample('bilinear').reproject({crs: 'EPSG:4326',scale: 30});return resampledImage;};
var LAI250m_2000 = resample(LAI250m_2000_);var LAI250m_2001 = resample(LAI250m_2001_);var LAI250m_2004 = resample(LAI250m_2004_);
var LAI250m_2005 = resample(LAI250m_2005_);var LAI250m_2006 = resample(LAI250m_2006_);var LAI250m_2009 = resample(LAI250m_2009_);
var LAI250m_2010 = resample(LAI250m_2010_);var LAI250m_2011 = resample(LAI250m_2011_);var LAI250m_2014 = resample(LAI250m_2014_);
var LAI250m_2015 = resample(LAI250m_2015_);
var LAI250m_2016 = resample(LAI250m_2016_);var LAI250m_2019 = resample(LAI250m_2019_);var LAI250m_2020 = resample(LAI250m_2020_);
var LAI250m_2021 = resample(LAI250m_2021_);
var FPAR250m_2000 = resample(FPAR250m_2000_);var FPAR250m_2001 = resample(FPAR250m_2001_);var FPAR250m_2004 = resample(FPAR250m_2004_);
var FPAR250m_2005 = resample(FPAR250m_2005_);var FPAR250m_2006 = resample(FPAR250m_2006_);var FPAR250m_2009 = resample(FPAR250m_2009_);
var FPAR250m_2010 = resample(FPAR250m_2010_);var FPAR250m_2011 = resample(FPAR250m_2011_);var FPAR250m_2014 = resample(FPAR250m_2014_);
var FPAR250m_2015 = resample(FPAR250m_2015_);
var FPAR250m_2016 = resample(FPAR250m_2016_);var FPAR250m_2019 = resample(FPAR250m_2019_);var FPAR250m_2020 = resample(FPAR250m_2020_);
var FPAR250m_2021 = resample(FPAR250m_2021_);
var LAI5km_1982 = resample(LAI5km_1982_);var LAI5km_1985 = resample(LAI5km_1985_);var LAI5km_1989 = resample(LAI5km_1989_);
var LAI5km_1990 = resample(LAI5km_1990_);var LAI5km_1991 = resample(LAI5km_1991_);var LAI5km_1994 = resample(LAI5km_1994_);
var LAI5km_1995 = resample(LAI5km_1995_);var LAI5km_1996 = resample(LAI5km_1996_);var LAI5km_1999 = resample(LAI5km_1999_);
var FPAR5km_1982 = resample(FPAR5km_1982_);var FPAR5km_1985 = resample(FPAR5km_1985_);var FPAR5km_1989 = resample(FPAR5km_1989_);
var FPAR5km_1990 = resample(FPAR5km_1990_);var FPAR5km_1991 = resample(FPAR5km_1991_);var FPAR5km_1994 = resample(FPAR5km_1994_);
var FPAR5km_1995 = resample(FPAR5km_1995_);var FPAR5km_1996 = resample(FPAR5km_1996_);var FPAR5km_1999 = resample(FPAR5km_1999_);

//import global forest fire dataset (30m)
var loss_due_to_fire = ee.ImageCollection('users/sashatyu/2001-2022_fire_forest_loss_annual').mosaic();
var loss_due_to_fire2019 = loss_due_to_fire.updateMask(loss_due_to_fire.lt(20));
//calculate recover duration
var recover_time = loss_due_to_fire2019.multiply(-1).add(20).uint8();

//upload and improt forest fire dataset in canada and USA (1984-2019)
var canada_USA = ee.ImageCollection([canada,USA]).mosaic();
var canada_USA_last2019 = canada_USA.where(canada_USA.lte(2019),canada_USA);
//calculate recover duration in canada and USA
var recover_time_canada_USA1=canada_USA_last2019.multiply(-1).add(2020);
var recover_time_canada_USA2 = recover_time_canada_USA1.updateMask(recover_time_canada_USA1.gt(0)).uint8();

////improt Global 3-class PALSAR-2/PALSAR Forest/Non-Forest Map to derive early forest areas disturbed by wildfires
var FNF3data = ee.ImageCollection("JAXA/ALOS/PALSAR/YEARLY/FNF")
                  .filterDate('2007-01-01', '2007-12-31')
                  .select('fnf');
var FNF3_ = FNF3data.qualityMosaic('fnf');
var FNF3_ = FNF3_.setDefaultProjection({crs: 'EPSG:4326',scale: 25});
var FNF3 = FNF3_.reduceResolution({reducer: ee.Reducer.mean(), bestEffort: true, maxPixels: 4})
                .reproject({crs: 'EPSG:4326',scale: 30});
//1_forest; 2_Non Forest; 3_Water
var forest_2007 = FNF3.updateMask(FNF3.eq(1));
var forest_fire = recover_time.updateMask(forest_2007.mask());
var canada_USA_forest_fire = recover_time_canada_USA2.updateMask(forest_2007.mask());

////import Global 4-class PALSAR-2/PALSAR Forest/Non-Forest Map to derive forest recover areas
var FNF4 = ee.ImageCollection('JAXA/ALOS/PALSAR/YEARLY/FNF4')
                  .filterDate('2020-01-01', '2020-12-31')
                  .select('fnf');
var FNF_ = FNF4.qualityMosaic('fnf');
var FNF_ = FNF_.setDefaultProjection({crs: 'EPSG:4326',scale: 25});
var FNF = FNF_.reduceResolution({reducer: ee.Reducer.mean(), bestEffort: true, maxPixels: 4})
                .reproject({crs: 'EPSG:4326',scale: 30});
//1_Dense forest; 2_Non-dence Forest; 3_Non-forest; 4_Water; use forest_2007 to fill the loss scene in forest_2020
var forest_2020_loss_scene = FNF.updateMask(FNF.lte(2));
var loss_scene = forest_2007.clip(geometry2);
var loss_scene2 = loss_scene.where(loss_scene,1);
var forest_2020 = ee.ImageCollection([forest_2020_loss_scene,loss_scene2]).mosaic();
//derive forest recover areas with the regowth time
var forest_recover_time = forest_fire.updateMask(forest_2020.mask());
var canada_USA_forest_recover_time = canada_USA_forest_fire.updateMask(forest_2020.mask());

////**map regrowth land type in 2020**
//forest recover (dence and nondence forest)
var forest_2020_2 = FNF.updateMask(FNF.eq(2));
var nondence_forest_recover = forest_recover_time.updateMask(forest_2020_2.mask());
var dence_forest_recover = forest_recover_time.updateMask(nondence_forest_recover.mask().not());
var dence_forest_recover10 = dence_forest_recover.where(dence_forest_recover,10);
var nondence_forest_recover15 = nondence_forest_recover.where(nondence_forest_recover,15);
//nonforest recover
var nonforest_recover = forest_fire.updateMask(forest_recover_time.mask().not());
var nonforest_recover20 = nonforest_recover.where(nonforest_recover, 20);
//mosaic
var recover_type2020 = ee.ImageCollection([dence_forest_recover10, nondence_forest_recover15, nonforest_recover20]).mosaic();
var recover_type_forest = ee.ImageCollection([dence_forest_recover10, nondence_forest_recover15]).mosaic();
Map.addLayer(recover_type2020,{min: 10, max: 20, palette: ['green','yellow', 'red']},'recover_type2020');

//canada_USA forest recover (dence and nondence forest)
var canada_USA_nondence_forest_recover = canada_USA_forest_recover_time.updateMask(forest_2020_2.mask());
var canada_USA_dence_forest_recover = canada_USA_forest_recover_time.updateMask(canada_USA_nondence_forest_recover.mask().not());
var canada_USA_dence_forest_recover10 = canada_USA_dence_forest_recover.where(canada_USA_dence_forest_recover,10);
var canada_USA_nondence_forest_recover15 = canada_USA_nondence_forest_recover.where(canada_USA_nondence_forest_recover,15);
//nonforest_recover
var canada_USA_nonforest_recover = canada_USA_forest_fire.updateMask(canada_USA_forest_recover_time.mask().not());
var canada_USA_nonforest_recover20 = canada_USA_nonforest_recover.where(canada_USA_nonforest_recover, 20);
//mosaic
var canada_USA_recover_type2020 = ee.ImageCollection([canada_USA_dence_forest_recover10, canada_USA_nondence_forest_recover15, canada_USA_nonforest_recover20]).mosaic();
var canada_USA_recover_type_forest = ee.ImageCollection([canada_USA_dence_forest_recover10, canada_USA_nondence_forest_recover15]).mosaic();

//****SE_Asia****
//map forest height and AGB regowth ratio
var forest_height2000= ee.Image("projects/glad/GLCLU2020/Forest_height_2000").select("b1");
var forest_height2020= ee.Image("projects/glad/GLCLU2020/Forest_height_2020").select("b1");
var height_2020 = forest_height2020.updateMask(recover_type_forest.mask());
var canada_USA_height_2020 = forest_height2020.updateMask(canada_USA_recover_type_forest.mask());
var a = -27.84; var b = -0.0340; var c = 30.75; var d = 0.0194; var e = 2.1604;
var AGB_2000_reference= forest_height2000.updateMask(height_2020.mask()).pow(e).multiply(d).multiply(10);
//2020
var height_2020_my_ = forest_recover_time.multiply(b).exp().multiply(a).add(c).toUint8();
var height_2020_my = height_2020_my_.updateMask(height_2020_my_.gt(2));
var height_recover2020_ratio = height_2020.float().divide(forest_height2000.float()).multiply(100).toUint8().updateMask(height_2020.mask());
var AGB_2020_= height_2020.pow(e).multiply(d).add(0.1).multiply(10).toUint8();//add 0.1 to avoid 0 value
var AGB_2020 = AGB_2020_.updateMask(AGB_2020_.gt(0));
var AGB_recover2020_ratio = AGB_2020.float().divide(AGB_2000_reference.float()).multiply(100).toUint8().updateMask(AGB_2020.mask());
//2015
var forest_recover_time2015 = forest_recover_time.subtract(5);
var frt2015 =  forest_recover_time2015.updateMask(forest_recover_time2015.gt(0));
var height_2015_ = frt2015.multiply(b).exp().multiply(a).add(c).toUint8();
var height_2015 = height_2015_.updateMask(height_2015_.gt(2));
var height_recover2015_ratio = height_2015.float().divide(forest_height2000.float()).multiply(100).toUint8().updateMask(height_2015.mask());
var AGB_2015_=  height_2015.float().pow(e).multiply(d).add(0.1).multiply(10).toUint8();
var AGB_2015 = AGB_2015_.updateMask(AGB_2015_.gt(0));
var AGB_recover2015_ratio = AGB_2015.float().divide(AGB_2000_reference.float()).multiply(100).toUint8().updateMask(AGB_2015.mask());
//2010
var forest_recover_time2010 = forest_recover_time2015.subtract(5);
var frt2010 =  forest_recover_time2010.updateMask(forest_recover_time2010.gt(0));
var height_2010_ = frt2010.multiply(b).exp().multiply(a).add(c).toUint8();
var height_2010 = height_2010_.updateMask(height_2010_.gt(2));
var height_recover2010_ratio = height_2010.float().divide(forest_height2000.float()).multiply(100).toUint8().updateMask(height_2010.mask());
var AGB_2010_=  height_2010.float().pow(e).multiply(d).add(0.1).multiply(10).toUint8();
var AGB_2010 = AGB_2010_.updateMask(AGB_2010_.gt(0));
var AGB_recover2010_ratio = AGB_2010.float().divide(AGB_2000_reference.float()).multiply(100).toUint8().updateMask(AGB_2010.mask());
//2005
var forest_recover_time2005 = forest_recover_time2010.subtract(5);
var frt2005 = forest_recover_time2005.updateMask(forest_recover_time2005.gt(0));
var height_2005_ = frt2005.multiply(b).exp().multiply(a).add(c).toUint8();
var height_2005 = height_2005_.updateMask(height_2005_.gt(2));
var height_recover2005_ratio = height_2005.float().divide(forest_height2000.float()).multiply(100).toUint8().updateMask(height_2005.mask());
var AGB_2005_=  height_2005.float().pow(e).multiply(d).add(0.1).multiply(10).toUint8();
var AGB_2005 = AGB_2005_.updateMask(AGB_2005_.gt(0));
var AGB_recover2005_ratio = AGB_2005.float().divide(AGB_2000_reference.float()).multiply(100).toUint8().updateMask(AGB_2005.mask());

//map forest height and AGB regrowth rate (scale: 0.1)
//2020
var height_recover_rate2020 = forest_recover_time.multiply(b).exp().multiply(a).multiply(b).add(0.1).multiply(10).toUint8();
var AGB_recover_rate2020 = forest_recover_time.multiply(b).exp().multiply(d).multiply(a).multiply(b).multiply(e).multiply
      (forest_recover_time.multiply(b).exp().multiply(a).add(c).pow(e - 1)).add(0.1).multiply(10).toUint8();
//2015
var height_recover_rate2015 = frt2015.multiply(b).exp().multiply(a).multiply(b).add(0.1).multiply(10).toUint8();
var AGB_recover_rate2015 = frt2015.multiply(b).exp().multiply(d).multiply(a).multiply(b).multiply(e).multiply
      (frt2015.multiply(b).exp().multiply(a).add(c).pow(e - 1)).add(0.1).multiply(10).toUint8();
//2010
var height_recover_rate2010 = frt2010.multiply(b).exp().multiply(a).multiply(b).add(0.1).multiply(10).toUint8();
var AGB_recover_rate2010 = frt2010.multiply(b).exp().multiply(d).multiply(a).multiply(b).multiply(e).multiply
      (frt2010.multiply(b).exp().multiply(a).add(c).pow(e - 1)).add(0.1).multiply(10).toUint8();
//2005
var height_recover_rate2005 = frt2005.multiply(b).exp().multiply(a).multiply(b).add(0.1).multiply(10).toUint8();
var AGB_recover_rate2005 = frt2005.multiply(b).exp().multiply(d).multiply(a).multiply(b).multiply(e).multiply
      (frt2005.multiply(b).exp().multiply(a).add(c).pow(e - 1)).add(0.1).multiply(10).toUint8();

//map forest LAI and FPAR regrowth ratio
//2020
var LAI_recover2020 = LAI250m_2020.updateMask(forest_recover_time.mask()).toUint8();
var FPAR_recover2020 = FPAR250m_2020.updateMask(forest_recover_time.mask()).toUint8();
var LAI_recover2020_ratio = LAI_recover2020.float().divide(LAI250m_2000.float()).multiply(100).toUint8().updateMask(LAI_recover2020.mask());
var FPAR_recover2020_ratio = FPAR_recover2020.float().divide(FPAR250m_2000.float()).multiply(100).toUint8().updateMask(FPAR_recover2020.mask());
//2015
var LAI_recover2015 = LAI250m_2015.updateMask(frt2015.mask()).toUint8();
var FPAR_recover2015 = FPAR250m_2015.updateMask(frt2015.mask()).toUint8();
var LAI_recover2015_ratio = LAI_recover2015.float().divide(LAI250m_2000.float()).multiply(100).toUint8().updateMask(LAI_recover2015.mask());
var FPAR_recover2015_ratio = FPAR_recover2015.float().divide(FPAR250m_2000.float()).multiply(100).toUint8().updateMask(FPAR_recover2015.mask());
//2010
var LAI_recover2010 = LAI250m_2010.updateMask(frt2010.mask()).toUint8();
var FPAR_recover2010 = FPAR250m_2010.updateMask(frt2010.mask()).toUint8();
var LAI_recover2010_ratio = LAI_recover2010.float().divide(LAI250m_2000.float()).multiply(100).toUint8().updateMask(LAI_recover2010.mask());
var FPAR_recover2010_ratio = FPAR_recover2010.float().divide(FPAR250m_2000.float()).multiply(100).toUint8().updateMask(FPAR_recover2010.mask());
//2005
var LAI_recover2005 = LAI250m_2005.updateMask(frt2005.mask()).toUint8();
var FPAR_recover2005 = FPAR250m_2005.updateMask(frt2005.mask()).toUint8();
var LAI_recover2005_ratio = LAI_recover2005.float().divide(LAI250m_2000.float()).multiply(100).toUint8().updateMask(LAI_recover2005.mask());
var FPAR_recover2005_ratio = FPAR_recover2005.float().divide(FPAR250m_2000.float()).multiply(100).toUint8().updateMask(FPAR_recover2005.mask());

//map forest LAI and FPAR regrowth rate
var LAI_recover2021 = LAI250m_2021.updateMask(forest_recover_time.mask()).toUint8();
var LAI_recover2019 = LAI250m_2019.updateMask(forest_recover_time.mask()).toUint8();
var LAI_recover2016 = LAI250m_2016.updateMask(frt2015.mask()).toUint8();
var LAI_recover2014 = LAI250m_2014.updateMask(frt2015.mask()).toUint8();
var LAI_recover2011 = LAI250m_2011.updateMask(frt2010.mask()).toUint8();
var LAI_recover2009 = LAI250m_2009.updateMask(frt2010.mask()).toUint8();
var LAI_recover2006 = LAI250m_2006.updateMask(frt2005.mask()).toUint8();
var LAI_recover2004 = LAI250m_2004.updateMask(frt2005.mask()).toUint8();
var FPAR_recover2021 = FPAR250m_2021.updateMask(forest_recover_time.mask()).toUint8();
var FPAR_recover2019 = FPAR250m_2019.updateMask(forest_recover_time.mask()).toUint8();
var FPAR_recover2016 = FPAR250m_2016.updateMask(frt2015.mask()).toUint8();
var FPAR_recover2014 = FPAR250m_2014.updateMask(frt2015.mask()).toUint8();
var FPAR_recover2011 = FPAR250m_2011.updateMask(frt2010.mask()).toUint8();
var FPAR_recover2009 = FPAR250m_2009.updateMask(frt2010.mask()).toUint8();
var FPAR_recover2006 = FPAR250m_2006.updateMask(frt2005.mask()).toUint8();
var FPAR_recover2004 = FPAR250m_2004.updateMask(frt2005.mask()).toUint8();
//2020
var LAI_recover_rate2020_ = (LAI_recover2021.subtract(LAI_recover2019)).divide(2);
var LAI_recover_rate2020 = LAI_recover_rate2020_.where(LAI_recover_rate2020_.lt(0.1),0.1).multiply(10).toUint8();
var FPAR_recover_rate2020_ = (FPAR_recover2021.subtract(FPAR_recover2019)).divide(2);
var FPAR_recover_rate2020 = FPAR_recover_rate2020_.where(FPAR_recover_rate2020_.lt(0.1),0.1).multiply(10).toUint8();
//2015
var LAI_recover_rate2015_ = (LAI_recover2016.subtract(LAI_recover2014)).divide(2);
var LAI_recover_rate2015 = LAI_recover_rate2015_.where(LAI_recover_rate2015_.lt(0.1),0.1).multiply(10).toUint8();
var FPAR_recover_rate2015_ = (FPAR_recover2016.subtract(FPAR_recover2014)).divide(2);
var FPAR_recover_rate2015 = FPAR_recover_rate2015_.where(FPAR_recover_rate2015_.lt(0.1),0.1).multiply(10).toUint8();
//2010
var LAI_recover_rate2010_ = (LAI_recover2011.subtract(LAI_recover2009)).divide(2);
var LAI_recover_rate2010 = LAI_recover_rate2010_.where(LAI_recover_rate2010_.lt(0.1),0.1).multiply(10).toUint8();
var FPAR_recover_rate2010_ = (FPAR_recover2011.subtract(FPAR_recover2009)).divide(2);
var FPAR_recover_rate2010 = FPAR_recover_rate2010_.where(FPAR_recover_rate2010_.lt(0.1),0.1).multiply(10).toUint8();
//2005
var LAI_recover_rate2005_ = (LAI_recover2006.subtract(LAI_recover2004)).divide(2);
var LAI_recover_rate2005 = LAI_recover_rate2005_.where(LAI_recover_rate2005_.lt(0.1),0.1).multiply(10).toUint8();
var FPAR_recover_rate2005_ = (FPAR_recover2006.subtract(FPAR_recover2004)).divide(2);
var FPAR_recover_rate2005 = FPAR_recover_rate2005_.where(FPAR_recover_rate2005_.lt(0.1),0.1).multiply(10).toUint8();

//add bands
var height_regrowth = recover_type2020.addBands([
                    height_recover2020_ratio, height_recover2015_ratio, height_recover2010_ratio, height_recover2005_ratio,
                    height_recover_rate2020, height_recover_rate2015, height_recover_rate2010, height_recover_rate2005,]).rename([
                    'Regrowth_type_2020',
                    'Height_regrowth_ratio_2020', 'Height_regrowth_ratio_2015', 'Height_regrowth_ratio_2010', 'Height_regrowth_ratio_2005',
                    'Height_regrowth_rate_2020', 'Height_regrowth_rate_2015', 'Height_regrowth_rate_2010', 'Height_regrowth_rate_2005']);
var AGB_regrowth = recover_type2020.addBands([
                    AGB_recover2020_ratio, AGB_recover2015_ratio, AGB_recover2010_ratio, AGB_recover2005_ratio,
                    AGB_recover_rate2020, AGB_recover_rate2015, AGB_recover_rate2010, AGB_recover_rate2005,]).rename([
                    'Regrowth_type_2020',
                    'AGB_regrowth_ratio_2020', 'AGB_regrowth_ratio_2015', 'AGB_regrowth_ratio_2010', 'AGB_regrowth_ratio_2005',
                    'AGB_regrowth_rate_2020', 'AGB_regrowth_rate_2015', 'AGB_regrowth_rate_2010', 'AGB_regrowth_rate_2005',]);
var LAI_regrowth = recover_type2020.addBands([
                    LAI_recover2020_ratio, LAI_recover2015_ratio, LAI_recover2010_ratio, LAI_recover2005_ratio,
                    LAI_recover_rate2020, LAI_recover_rate2015, LAI_recover_rate2010, LAI_recover_rate2005,]).rename([
                    'Regrowth_type_2020',
                    'LAI_regrowth_ratio_2020', 'LAI_regrowth_ratio_2015', 'LAI_regrowth_ratio_2010', 'LAI_regrowth_ratio_2005',
                    'LAI_regrowth_rate_2020', 'LAI_regrowth_rate_2015', 'LAI_regrowth_rate_2010', 'LAI_regrowth_rate_2005']);
var FPAR_regrowth = recover_type2020.addBands([
                    FPAR_recover2020_ratio, FPAR_recover2015_ratio, FPAR_recover2010_ratio, FPAR_recover2005_ratio,
                    FPAR_recover_rate2020, FPAR_recover_rate2015, FPAR_recover_rate2010, FPAR_recover_rate2005,]).rename([
                    'Regrowth_type_2020',
                    'FPAR_regrowth_ratio_2020', 'FPAR_regrowth_ratio_2015', 'FPAR_regrowth_ratio_2010', 'FPAR_regrowth_ratio_2005',
                    'FPAR_regrowth_rate_2020', 'FPAR_regrowth_rate_2015', 'FPAR_regrowth_rate_2010', 'FPAR_regrowth_rate_2005']);        

//****Australia****
//map forest height and AGB regowth ratio
var a = -15.58; var b = -0.1498; var c = 18.01; var d = 0.0353; var e = 2.1506;
var AGB_2000_reference= forest_height2000.updateMask(height_2020.mask()).pow(e).multiply(d).multiply(10);
//2020
var height_2020_my_ = forest_recover_time.multiply(b).exp().multiply(a).add(c).toUint8();
var height_2020_my = height_2020_my_.updateMask(height_2020_my_.gt(2));
var height_recover2020_ratio = height_2020.float().divide(forest_height2000.float()).multiply(100).toUint8().updateMask(height_2020.mask());
var AGB_2020_=  height_2020.pow(e).multiply(d).add(0.1).multiply(10).toUint8();
var AGB_2020 = AGB_2020_.updateMask(AGB_2020_.gt(0));
var AGB_recover2020_ratio = AGB_2020.float().divide(AGB_2000_reference.float()).multiply(100).toUint8().updateMask(AGB_2020.mask());
//2015
var height_2015_ = frt2015.multiply(b).exp().multiply(a).add(c).toUint8();
var height_2015 = height_2015_.updateMask(height_2015_.gt(2));
var height_recover2015_ratio = height_2015.float().divide(forest_height2000.float()).multiply(100).toUint8().updateMask(height_2015.mask());
var AGB_2015_=  height_2015.float().pow(e).multiply(d).add(0.1).multiply(10).toUint8();
var AGB_2015 = AGB_2015_.updateMask(AGB_2015_.gt(0));
var AGB_recover2015_ratio = AGB_2015.float().divide(AGB_2000_reference.float()).multiply(100).toUint8().updateMask(AGB_2015.mask());
//2010
var height_2010_ = frt2010.multiply(b).exp().multiply(a).add(c).toUint8();
var height_2010 = height_2010_.updateMask(height_2010_.gt(2));
var height_recover2010_ratio = height_2010.float().divide(forest_height2000.float()).multiply(100).toUint8().updateMask(height_2010.mask());
var AGB_2010_=  height_2010.float().pow(e).multiply(d).add(0.1).multiply(10).toUint8();
var AGB_2010 = AGB_2010_.updateMask(AGB_2010_.gt(0));
var AGB_recover2010_ratio = AGB_2010.float().divide(AGB_2000_reference.float()).multiply(100).toUint8().updateMask(AGB_2010.mask());
//2005
var height_2005_ = frt2005.multiply(b).exp().multiply(a).add(c).toUint8();
var height_2005 = height_2005_.updateMask(height_2005_.gt(2));
var height_recover2005_ratio = height_2005.float().divide(forest_height2000.float()).multiply(100).toUint8().updateMask(height_2005.mask());
var AGB_2005_=  height_2005.float().pow(e).multiply(d).add(0.1).multiply(10).toUint8();
var AGB_2005 = AGB_2005_.updateMask(AGB_2005_.gt(0));
var AGB_recover2005_ratio = AGB_2005.float().divide(AGB_2000_reference.float()).multiply(100).toUint8().updateMask(AGB_2005.mask());

//map forest height and AGB regowth rate
//2020
var height_recover_rate2020 = forest_recover_time.multiply(b).exp().multiply(a).multiply(b).add(0.1).multiply(10).toUint8();
var AGB_recover_rate2020 = forest_recover_time.multiply(b).exp().multiply(d).multiply(a).multiply(b).multiply(e).multiply
      (forest_recover_time.multiply(b).exp().multiply(a).add(c).pow(e - 1)).add(0.1).multiply(10).toUint8();
//2015
var height_recover_rate2015 = frt2015.multiply(b).exp().multiply(a).multiply(b).add(0.1).multiply(10).toUint8();
var AGB_recover_rate2015 = frt2015.multiply(b).exp().multiply(d).multiply(a).multiply(b).multiply(e).multiply
      (frt2015.multiply(b).exp().multiply(a).add(c).pow(e - 1)).add(0.1).multiply(10).toUint8();
//2010
var height_recover_rate2010 = frt2010.multiply(b).exp().multiply(a).multiply(b).add(0.1).multiply(10).toUint8();
var AGB_recover_rate2010 = frt2010.multiply(b).exp().multiply(d).multiply(a).multiply(b).multiply(e).multiply
      (frt2010.multiply(b).exp().multiply(a).add(c).pow(e - 1)).add(0.1).multiply(10).toUint8();
//2005
var height_recover_rate2005 = frt2005.multiply(b).exp().multiply(a).multiply(b).add(0.1).multiply(10).toUint8();
var AGB_recover_rate2005 = frt2005.multiply(b).exp().multiply(d).multiply(a).multiply(b).multiply(e).multiply
      (frt2005.multiply(b).exp().multiply(a).add(c).pow(e - 1)).add(0.1).multiply(10).toUint8();

//add bands
var height_regrowth = recover_type2020.addBands([
                    height_recover2020_ratio, height_recover2015_ratio, height_recover2010_ratio, height_recover2005_ratio,
                    height_recover_rate2020, height_recover_rate2015, height_recover_rate2010, height_recover_rate2005,]).rename([
                    'Regrowth_type_2020',
                    'Height_regrowth_ratio_2020', 'Height_regrowth_ratio_2015', 'Height_regrowth_ratio_2010', 'Height_regrowth_ratio_2005',
                    'Height_regrowth_rate_2020', 'Height_regrowth_rate_2015', 'Height_regrowth_rate_2010', 'Height_regrowth_rate_2005']);
var AGB_regrowth = recover_type2020.addBands([
                    AGB_recover2020_ratio, AGB_recover2015_ratio, AGB_recover2010_ratio, AGB_recover2005_ratio,
                    AGB_recover_rate2020, AGB_recover_rate2015, AGB_recover_rate2010, AGB_recover_rate2005,]).rename([
                    'Regrowth_type_2020',
                    'AGB_regrowth_ratio_2020', 'AGB_regrowth_ratio_2015', 'AGB_regrowth_ratio_2010', 'AGB_regrowth_ratio_2005',
                    'AGB_regrowth_rate_2020', 'AGB_regrowth_rate_2015', 'AGB_regrowth_rate_2010', 'AGB_regrowth_rate_2005',]);

//****Europe****
//map forest height and AGB regowth ratio
var a = -32.60; var b = -0.0183; var c = 35.88; var d = 0.3538; var e = 1.2103;
var AGB_2000_reference= forest_height2000.updateMask(height_2020.mask()).pow(e).multiply(d).multiply(10);
//2020
var height_2020_my_ = forest_recover_time.multiply(b).exp().multiply(a).add(c).toUint8();
var height_2020_my = height_2020_my_.updateMask(height_2020_my_.gt(2));
var height_recover2020_ratio = height_2020.float().divide(forest_height2000.float()).multiply(100).toUint8().updateMask(height_2020.mask());
var AGB_2020_=  height_2020.pow(e).multiply(d).add(0.1).multiply(10).toUint8();
var AGB_2020 = AGB_2020_.updateMask(AGB_2020_.gt(0));
var AGB_recover2020_ratio = AGB_2020.float().divide(AGB_2000_reference.float()).multiply(100).toUint8().updateMask(AGB_2020.mask());
//2015
var height_2015_ = frt2015.multiply(b).exp().multiply(a).add(c).toUint8();
var height_2015 = height_2015_.updateMask(height_2015_.gt(2));
var height_recover2015_ratio = height_2015.float().divide(forest_height2000.float()).multiply(100).toUint8().updateMask(height_2015.mask());
var AGB_2015_=  height_2015.float().pow(e).multiply(d).add(0.1).multiply(10).toUint8();
var AGB_2015 = AGB_2015_.updateMask(AGB_2015_.gt(0));
var AGB_recover2015_ratio = AGB_2015.float().divide(AGB_2000_reference.float()).multiply(100).toUint8().updateMask(AGB_2015.mask());
//2010
var height_2010_ = frt2010.multiply(b).exp().multiply(a).add(c).toUint8();
var height_2010 = height_2010_.updateMask(height_2010_.gt(2));
var height_recover2010_ratio = height_2010.float().divide(forest_height2000.float()).multiply(100).toUint8().updateMask(height_2010.mask());
var AGB_2010_=  height_2010.float().pow(e).multiply(d).add(0.1).multiply(10).toUint8();
var AGB_2010 = AGB_2010_.updateMask(AGB_2010_.gt(0));
var AGB_recover2010_ratio = AGB_2010.float().divide(AGB_2000_reference.float()).multiply(100).toUint8().updateMask(AGB_2010.mask());
//2005
var height_2005_ = frt2005.multiply(b).exp().multiply(a).add(c).toUint8();
var height_2005 = height_2005_.updateMask(height_2005_.gt(2));
var height_recover2005_ratio = height_2005.float().divide(forest_height2000.float()).multiply(100).toUint8().updateMask(height_2005.mask());
var AGB_2005_=  height_2005.float().pow(e).multiply(d).add(0.1).multiply(10).toUint8();
var AGB_2005 = AGB_2005_.updateMask(AGB_2005_.gt(0));
var AGB_recover2005_ratio = AGB_2005.float().divide(AGB_2000_reference.float()).multiply(100).toUint8().updateMask(AGB_2005.mask());

//map forest height and AGB regowth rate
//2020
var height_recover_rate2020 = forest_recover_time.multiply(b).exp().multiply(a).multiply(b).add(0.1).multiply(10).toUint8();
var AGB_recover_rate2020 = forest_recover_time.multiply(b).exp().multiply(d).multiply(a).multiply(b).multiply(e).multiply
      (forest_recover_time.multiply(b).exp().multiply(a).add(c).pow(e - 1)).add(0.1).multiply(10).toUint8();
//2015
var height_recover_rate2015 = frt2015.multiply(b).exp().multiply(a).multiply(b).add(0.1).multiply(10).toUint8();
var AGB_recover_rate2015 = frt2015.multiply(b).exp().multiply(d).multiply(a).multiply(b).multiply(e).multiply
      (frt2015.multiply(b).exp().multiply(a).add(c).pow(e - 1)).add(0.1).multiply(10).toUint8();
//2010
var height_recover_rate2010 = frt2010.multiply(b).exp().multiply(a).multiply(b).add(0.1).multiply(10).toUint8();
var AGB_recover_rate2010 = frt2010.multiply(b).exp().multiply(d).multiply(a).multiply(b).multiply(e).multiply
      (frt2010.multiply(b).exp().multiply(a).add(c).pow(e - 1)).add(0.1).multiply(10).toUint8();
//2005
var height_recover_rate2005 = frt2005.multiply(b).exp().multiply(a).multiply(b).add(0.1).multiply(10).toUint8();
var AGB_recover_rate2005 = frt2005.multiply(b).exp().multiply(d).multiply(a).multiply(b).multiply(e).multiply
      (frt2005.multiply(b).exp().multiply(a).add(c).pow(e - 1)).add(0.1).multiply(10).toUint8();

//add bands
var height_regrowth = recover_type2020.addBands([
                    height_recover2020_ratio, height_recover2015_ratio, height_recover2010_ratio, height_recover2005_ratio,
                    height_recover_rate2020, height_recover_rate2015, height_recover_rate2010, height_recover_rate2005,]).rename([
                    'Regrowth_type_2020',
                    'Height_regrowth_ratio_2020', 'Height_regrowth_ratio_2015', 'Height_regrowth_ratio_2010', 'Height_regrowth_ratio_2005',
                    'Height_regrowth_rate_2020', 'Height_regrowth_rate_2015', 'Height_regrowth_rate_2010', 'Height_regrowth_rate_2005']);
var AGB_regrowth = recover_type2020.addBands([
                    AGB_recover2020_ratio, AGB_recover2015_ratio, AGB_recover2010_ratio, AGB_recover2005_ratio,
                    AGB_recover_rate2020, AGB_recover_rate2015, AGB_recover_rate2010, AGB_recover_rate2005,]).rename([
                    'Regrowth_type_2020',
                    'AGB_regrowth_ratio_2020', 'AGB_regrowth_ratio_2015', 'AGB_regrowth_ratio_2010', 'AGB_regrowth_ratio_2005',
                    'AGB_regrowth_rate_2020', 'AGB_regrowth_rate_2015', 'AGB_regrowth_rate_2010', 'AGB_regrowth_rate_2005',]);

//****North_Eurasia****
//map forest height and AGB regowth ratio
var a = -12.44; var b = -0.3095; var c = 13.35; var d = 0.018; var e = 2.2194;
var AGB_2000_reference= forest_height2000.updateMask(height_2020.mask()).pow(e).multiply(d).multiply(10);
//2020
var height_2020_my_ = forest_recover_time.multiply(b).exp().multiply(a).add(c).toUint8();
var height_2020_my = height_2020_my_.updateMask(height_2020_my_.gt(2));
var height_recover2020_ratio = height_2020.float().divide(forest_height2000.float()).multiply(100).toUint8().updateMask(height_2020.mask());
var AGB_2020_=  height_2020.pow(e).multiply(d).add(0.1).multiply(10).toUint8();
var AGB_2020 = AGB_2020_.updateMask(AGB_2020_.gt(0));
var AGB_recover2020_ratio = AGB_2020.float().divide(AGB_2000_reference.float()).multiply(100).toUint8().updateMask(AGB_2020.mask());
//2015
var height_2015_ = frt2015.multiply(b).exp().multiply(a).add(c).toUint8();
var height_2015 = height_2015_.updateMask(height_2015_.gt(2));
var height_recover2015_ratio = height_2015.float().divide(forest_height2000.float()).multiply(100).toUint8().updateMask(height_2015.mask());
var AGB_2015_=  height_2015.float().pow(e).multiply(d).add(0.1).multiply(10).toUint8();
var AGB_2015 = AGB_2015_.updateMask(AGB_2015_.gt(0));
var AGB_recover2015_ratio = AGB_2015.float().divide(AGB_2000_reference.float()).multiply(100).toUint8().updateMask(AGB_2015.mask());
//2010
var height_2010_ = frt2010.multiply(b).exp().multiply(a).add(c).toUint8();
var height_2010 = height_2010_.updateMask(height_2010_.gt(2));
var height_recover2010_ratio = height_2010.float().divide(forest_height2000.float()).multiply(100).toUint8().updateMask(height_2010.mask());
var AGB_2010_=  height_2010.float().pow(e).multiply(d).add(0.1).multiply(10).toUint8();
var AGB_2010 = AGB_2010_.updateMask(AGB_2010_.gt(0));
var AGB_recover2010_ratio = AGB_2010.float().divide(AGB_2000_reference.float()).multiply(100).toUint8().updateMask(AGB_2010.mask());
//2005
var height_2005_ = frt2005.multiply(b).exp().multiply(a).add(c).toUint8();
var height_2005 = height_2005_.updateMask(height_2005_.gt(2));
var height_recover2005_ratio = height_2005.float().divide(forest_height2000.float()).multiply(100).toUint8().updateMask(height_2005.mask());
var AGB_2005_=  height_2005.float().pow(e).multiply(d).add(0.1).multiply(10).toUint8();
var AGB_2005 = AGB_2005_.updateMask(AGB_2005_.gt(0));
var AGB_recover2005_ratio = AGB_2005.float().divide(AGB_2000_reference.float()).multiply(100).toUint8().updateMask(AGB_2005.mask());

//map forest height and AGB regowth rate
//2020
var height_recover_rate2020 = forest_recover_time.multiply(b).exp().multiply(a).multiply(b).add(0.1).multiply(10).toUint8();
var AGB_recover_rate2020 = forest_recover_time.multiply(b).exp().multiply(d).multiply(a).multiply(b).multiply(e).multiply
      (forest_recover_time.multiply(b).exp().multiply(a).add(c).pow(e - 1)).add(0.1).multiply(10).toUint8();
//2015
var height_recover_rate2015 = frt2015.multiply(b).exp().multiply(a).multiply(b).add(0.1).multiply(10).toUint8();
var AGB_recover_rate2015 = frt2015.multiply(b).exp().multiply(d).multiply(a).multiply(b).multiply(e).multiply
      (frt2015.multiply(b).exp().multiply(a).add(c).pow(e - 1)).add(0.1).multiply(10).toUint8();
//2010
var height_recover_rate2010 = frt2010.multiply(b).exp().multiply(a).multiply(b).add(0.1).multiply(10).toUint8();
var AGB_recover_rate2010 = frt2010.multiply(b).exp().multiply(d).multiply(a).multiply(b).multiply(e).multiply
      (frt2010.multiply(b).exp().multiply(a).add(c).pow(e - 1)).add(0.1).multiply(10).toUint8();
//2005
var height_recover_rate2005 = frt2005.multiply(b).exp().multiply(a).multiply(b).add(0.1).multiply(10).toUint8();
var AGB_recover_rate2005 = frt2005.multiply(b).exp().multiply(d).multiply(a).multiply(b).multiply(e).multiply
      (frt2005.multiply(b).exp().multiply(a).add(c).pow(e - 1)).add(0.1).multiply(10).toUint8();

//add bands
var height_regrowth = recover_type2020.addBands([
                    height_recover2020_ratio, height_recover2015_ratio, height_recover2010_ratio, height_recover2005_ratio,
                    height_recover_rate2020, height_recover_rate2015, height_recover_rate2010, height_recover_rate2005,]).rename([
                    'Regrowth_type_2020',
                    'Height_regrowth_ratio_2020', 'Height_regrowth_ratio_2015', 'Height_regrowth_ratio_2010', 'Height_regrowth_ratio_2005',
                    'Height_regrowth_rate_2020', 'Height_regrowth_rate_2015', 'Height_regrowth_rate_2010', 'Height_regrowth_rate_2005']);
var AGB_regrowth = recover_type2020.addBands([
                    AGB_recover2020_ratio, AGB_recover2015_ratio, AGB_recover2010_ratio, AGB_recover2005_ratio,
                    AGB_recover_rate2020, AGB_recover_rate2015, AGB_recover_rate2010, AGB_recover_rate2005,]).rename([
                    'Regrowth_type_2020',
                    'AGB_regrowth_ratio_2020', 'AGB_regrowth_ratio_2015', 'AGB_regrowth_ratio_2010', 'AGB_regrowth_ratio_2005',
                    'AGB_regrowth_rate_2020', 'AGB_regrowth_rate_2015', 'AGB_regrowth_rate_2010', 'AGB_regrowth_rate_2005',]);

//****South_Eurasia****
//map forest height and AGB regowth ratio
var a = -24.79; var b = -0.0345; var c = 29.30; var d = 0.246; var e = 1.4256;
var AGB_2000_reference= forest_height2000.updateMask(height_2020.mask()).pow(e).multiply(d).multiply(10);
//2020
var height_2020_my_ = forest_recover_time.multiply(b).exp().multiply(a).add(c).toUint8();
var height_2020_my = height_2020_my_.updateMask(height_2020_my_.gt(2));
var height_recover2020_ratio = height_2020.float().divide(forest_height2000.float()).multiply(100).toUint8().updateMask(height_2020.mask());
var AGB_2020_=  height_2020.pow(e).multiply(d).add(0.1).multiply(10).toUint8();
var AGB_2020 = AGB_2020_.updateMask(AGB_2020_.gt(0));
var AGB_recover2020_ratio = AGB_2020.float().divide(AGB_2000_reference.float()).multiply(100).toUint8().updateMask(AGB_2020.mask());
//2015
var height_2015_ = frt2015.multiply(b).exp().multiply(a).add(c).toUint8();
var height_2015 = height_2015_.updateMask(height_2015_.gt(2));
var height_recover2015_ratio = height_2015.float().divide(forest_height2000.float()).multiply(100).toUint8().updateMask(height_2015.mask());
var AGB_2015_=  height_2015.float().pow(e).multiply(d).add(0.1).multiply(10).toUint8();
var AGB_2015 = AGB_2015_.updateMask(AGB_2015_.gt(0));
var AGB_recover2015_ratio = AGB_2015.float().divide(AGB_2000_reference.float()).multiply(100).toUint8().updateMask(AGB_2015.mask());
//2010
var height_2010_ = frt2010.multiply(b).exp().multiply(a).add(c).toUint8();
var height_2010 = height_2010_.updateMask(height_2010_.gt(2));
var height_recover2010_ratio = height_2010.float().divide(forest_height2000.float()).multiply(100).toUint8().updateMask(height_2010.mask());
var AGB_2010_=  height_2010.float().pow(e).multiply(d).add(0.1).multiply(10).toUint8();
var AGB_2010 = AGB_2010_.updateMask(AGB_2010_.gt(0));
var AGB_recover2010_ratio = AGB_2010.float().divide(AGB_2000_reference.float()).multiply(100).toUint8().updateMask(AGB_2010.mask());
//2005
var height_2005_ = frt2005.multiply(b).exp().multiply(a).add(c).toUint8();
var height_2005 = height_2005_.updateMask(height_2005_.gt(2));
var height_recover2005_ratio = height_2005.float().divide(forest_height2000.float()).multiply(100).toUint8().updateMask(height_2005.mask());
var AGB_2005_=  height_2005.float().pow(e).multiply(d).add(0.1).multiply(10).toUint8();
var AGB_2005 = AGB_2005_.updateMask(AGB_2005_.gt(0));
var AGB_recover2005_ratio = AGB_2005.float().divide(AGB_2000_reference.float()).multiply(100).toUint8().updateMask(AGB_2005.mask());

//map forest height and AGB regowth rate
//2020
var height_recover_rate2020 = forest_recover_time.multiply(b).exp().multiply(a).multiply(b).add(0.1).multiply(10).toUint8();
var AGB_recover_rate2020 = forest_recover_time.multiply(b).exp().multiply(d).multiply(a).multiply(b).multiply(e).multiply
      (forest_recover_time.multiply(b).exp().multiply(a).add(c).pow(e - 1)).add(0.1).multiply(10).toUint8();
//2015
var height_recover_rate2015 = frt2015.multiply(b).exp().multiply(a).multiply(b).add(0.1).multiply(10).toUint8();
var AGB_recover_rate2015 = frt2015.multiply(b).exp().multiply(d).multiply(a).multiply(b).multiply(e).multiply
      (frt2015.multiply(b).exp().multiply(a).add(c).pow(e - 1)).add(0.1).multiply(10).toUint8();
//2010
var height_recover_rate2010 = frt2010.multiply(b).exp().multiply(a).multiply(b).add(0.1).multiply(10).toUint8();
var AGB_recover_rate2010 = frt2010.multiply(b).exp().multiply(d).multiply(a).multiply(b).multiply(e).multiply
      (frt2010.multiply(b).exp().multiply(a).add(c).pow(e - 1)).add(0.1).multiply(10).toUint8();
//2005
var height_recover_rate2005 = frt2005.multiply(b).exp().multiply(a).multiply(b).add(0.1).multiply(10).toUint8();
var AGB_recover_rate2005 = frt2005.multiply(b).exp().multiply(d).multiply(a).multiply(b).multiply(e).multiply
      (frt2005.multiply(b).exp().multiply(a).add(c).pow(e - 1)).add(0.1).multiply(10).toUint8();

//add bands
var height_regrowth = recover_type2020.addBands([
                    height_recover2020_ratio, height_recover2015_ratio, height_recover2010_ratio, height_recover2005_ratio,
                    height_recover_rate2020, height_recover_rate2015, height_recover_rate2010, height_recover_rate2005,]).rename([
                    'Regrowth_type_2020',
                    'Height_regrowth_ratio_2020', 'Height_regrowth_ratio_2015', 'Height_regrowth_ratio_2010', 'Height_regrowth_ratio_2005',
                    'Height_regrowth_rate_2020', 'Height_regrowth_rate_2015', 'Height_regrowth_rate_2010', 'Height_regrowth_rate_2005']);
var AGB_regrowth = recover_type2020.addBands([
                    AGB_recover2020_ratio, AGB_recover2015_ratio, AGB_recover2010_ratio, AGB_recover2005_ratio,
                    AGB_recover_rate2020, AGB_recover_rate2015, AGB_recover_rate2010, AGB_recover_rate2005,]).rename([
                    'Regrowth_type_2020',
                    'AGB_regrowth_ratio_2020', 'AGB_regrowth_ratio_2015', 'AGB_regrowth_ratio_2010', 'AGB_regrowth_ratio_2005',
                    'AGB_regrowth_rate_2020', 'AGB_regrowth_rate_2015', 'AGB_regrowth_rate_2010', 'AGB_regrowth_rate_2005',]);

//****South_America****
//map forest height and AGB regowth ratio
var a = -24.34; var b = -0.0477; var c = 28.03; var d = 0.0541; var e = 1.894;
var AGB_2000_reference= forest_height2000.updateMask(height_2020.mask()).pow(e).multiply(d).multiply(10);
//2020
var height_2020_my_ = forest_recover_time.multiply(b).exp().multiply(a).add(c).toUint8();
var height_2020_my = height_2020_my_.updateMask(height_2020_my_.gt(2));
var height_recover2020_ratio = height_2020.float().divide(forest_height2000.float()).multiply(100).toUint8().updateMask(height_2020.mask());
var AGB_2020_=  height_2020.pow(e).multiply(d).add(0.1).multiply(10).toUint8();
var AGB_2020 = AGB_2020_.updateMask(AGB_2020_.gt(0));
var AGB_recover2020_ratio = AGB_2020.float().divide(AGB_2000_reference.float()).multiply(100).toUint8().updateMask(AGB_2020.mask());
//2015
var height_2015_ = frt2015.multiply(b).exp().multiply(a).add(c).toUint8();
var height_2015 = height_2015_.updateMask(height_2015_.gt(2));
var height_recover2015_ratio = height_2015.float().divide(forest_height2000.float()).multiply(100).toUint8().updateMask(height_2015.mask());
var AGB_2015_=  height_2015.float().pow(e).multiply(d).add(0.1).multiply(10).toUint8();
var AGB_2015 = AGB_2015_.updateMask(AGB_2015_.gt(0));
var AGB_recover2015_ratio = AGB_2015.float().divide(AGB_2000_reference.float()).multiply(100).toUint8().updateMask(AGB_2015.mask());
//2010
var height_2010_ = frt2010.multiply(b).exp().multiply(a).add(c).toUint8();
var height_2010 = height_2010_.updateMask(height_2010_.gt(2));
var height_recover2010_ratio = height_2010.float().divide(forest_height2000.float()).multiply(100).toUint8().updateMask(height_2010.mask());
var AGB_2010_=  height_2010.float().pow(e).multiply(d).add(0.1).multiply(10).toUint8();
var AGB_2010 = AGB_2010_.updateMask(AGB_2010_.gt(0));
var AGB_recover2010_ratio = AGB_2010.float().divide(AGB_2000_reference.float()).multiply(100).toUint8().updateMask(AGB_2010.mask());
//2005
var height_2005_ = frt2005.multiply(b).exp().multiply(a).add(c).toUint8();
var height_2005 = height_2005_.updateMask(height_2005_.gt(2));
var height_recover2005_ratio = height_2005.float().divide(forest_height2000.float()).multiply(100).toUint8().updateMask(height_2005.mask());
var AGB_2005_=  height_2005.float().pow(e).multiply(d).add(0.1).multiply(10).toUint8();
var AGB_2005 = AGB_2005_.updateMask(AGB_2005_.gt(0));
var AGB_recover2005_ratio = AGB_2005.float().divide(AGB_2000_reference.float()).multiply(100).toUint8().updateMask(AGB_2005.mask());

//map forest height and AGB regowth rate
//2020
var height_recover_rate2020 = forest_recover_time.multiply(b).exp().multiply(a).multiply(b).add(0.1).multiply(10).toUint8();
var AGB_recover_rate2020 = forest_recover_time.multiply(b).exp().multiply(d).multiply(a).multiply(b).multiply(e).multiply
      (forest_recover_time.multiply(b).exp().multiply(a).add(c).pow(e - 1)).add(0.1).multiply(10).toUint8();
//2015
var height_recover_rate2015 = frt2015.multiply(b).exp().multiply(a).multiply(b).add(0.1).multiply(10).toUint8();
var AGB_recover_rate2015 = frt2015.multiply(b).exp().multiply(d).multiply(a).multiply(b).multiply(e).multiply
      (frt2015.multiply(b).exp().multiply(a).add(c).pow(e - 1)).add(0.1).multiply(10).toUint8();
//2010
var height_recover_rate2010 = frt2010.multiply(b).exp().multiply(a).multiply(b).add(0.1).multiply(10).toUint8();
var AGB_recover_rate2010 = frt2010.multiply(b).exp().multiply(d).multiply(a).multiply(b).multiply(e).multiply
      (frt2010.multiply(b).exp().multiply(a).add(c).pow(e - 1)).add(0.1).multiply(10).toUint8();
//2005
var height_recover_rate2005 = frt2005.multiply(b).exp().multiply(a).multiply(b).add(0.1).multiply(10).toUint8();
var AGB_recover_rate2005 = frt2005.multiply(b).exp().multiply(d).multiply(a).multiply(b).multiply(e).multiply
      (frt2005.multiply(b).exp().multiply(a).add(c).pow(e - 1)).add(0.1).multiply(10).toUint8();

//add bands
var height_regrowth = recover_type2020.addBands([
                    height_recover2020_ratio, height_recover2015_ratio, height_recover2010_ratio, height_recover2005_ratio,
                    height_recover_rate2020, height_recover_rate2015, height_recover_rate2010, height_recover_rate2005,]).rename([
                    'Regrowth_type_2020',
                    'Height_regrowth_ratio_2020', 'Height_regrowth_ratio_2015', 'Height_regrowth_ratio_2010', 'Height_regrowth_ratio_2005',
                    'Height_regrowth_rate_2020', 'Height_regrowth_rate_2015', 'Height_regrowth_rate_2010', 'Height_regrowth_rate_2005']);
var AGB_regrowth = recover_type2020.addBands([
                    AGB_recover2020_ratio, AGB_recover2015_ratio, AGB_recover2010_ratio, AGB_recover2005_ratio,
                    AGB_recover_rate2020, AGB_recover_rate2015, AGB_recover_rate2010, AGB_recover_rate2005,]).rename([
                    'Regrowth_type_2020',
                    'AGB_regrowth_ratio_2020', 'AGB_regrowth_ratio_2015', 'AGB_regrowth_ratio_2010', 'AGB_regrowth_ratio_2005',
                    'AGB_regrowth_rate_2020', 'AGB_regrowth_rate_2015', 'AGB_regrowth_rate_2010', 'AGB_regrowth_rate_2005',]);

//****Africa****
//map forest height and AGB regowth ratio
var a = -10.48; var b = -0.1469; var c = 13.01; var d = 0.0251; var e = 2.12;
var AGB_2000_reference= forest_height2000.updateMask(height_2020.mask()).pow(e).multiply(d).multiply(10);
//2020
var height_2020_my_ = forest_recover_time.multiply(b).exp().multiply(a).add(c).toUint8();
var height_2020_my = height_2020_my_.updateMask(height_2020_my_.gt(2));
var height_recover2020_ratio = height_2020.float().divide(forest_height2000.float()).multiply(100).toUint8().updateMask(height_2020.mask());
var AGB_2020_=  height_2020.pow(e).multiply(d).add(0.1).multiply(10).toUint8();
var AGB_2020 = AGB_2020_.updateMask(AGB_2020_.gt(0));
var AGB_recover2020_ratio = AGB_2020.float().divide(AGB_2000_reference.float()).multiply(100).toUint8().updateMask(AGB_2020.mask());
//2015
var height_2015_ = frt2015.multiply(b).exp().multiply(a).add(c).toUint8();
var height_2015 = height_2015_.updateMask(height_2015_.gt(2));
var height_recover2015_ratio = height_2015.float().divide(forest_height2000.float()).multiply(100).toUint8().updateMask(height_2015.mask());
var AGB_2015_=  height_2015.float().pow(e).multiply(d).add(0.1).multiply(10).toUint8();
var AGB_2015 = AGB_2015_.updateMask(AGB_2015_.gt(0));
var AGB_recover2015_ratio = AGB_2015.float().divide(AGB_2000_reference.float()).multiply(100).toUint8().updateMask(AGB_2015.mask());
//2010
var height_2010_ = frt2010.multiply(b).exp().multiply(a).add(c).toUint8();
var height_2010 = height_2010_.updateMask(height_2010_.gt(2));
var height_recover2010_ratio = height_2010.float().divide(forest_height2000.float()).multiply(100).toUint8().updateMask(height_2010.mask());
var AGB_2010_=  height_2010.float().pow(e).multiply(d).add(0.1).multiply(10).toUint8();
var AGB_2010 = AGB_2010_.updateMask(AGB_2010_.gt(0));
var AGB_recover2010_ratio = AGB_2010.float().divide(AGB_2000_reference.float()).multiply(100).toUint8().updateMask(AGB_2010.mask());
//2005
var height_2005_ = frt2005.multiply(b).exp().multiply(a).add(c).toUint8();
var height_2005 = height_2005_.updateMask(height_2005_.gt(2));
var height_recover2005_ratio = height_2005.float().divide(forest_height2000.float()).multiply(100).toUint8().updateMask(height_2005.mask());
var AGB_2005_=  height_2005.float().pow(e).multiply(d).add(0.1).multiply(10).toUint8();
var AGB_2005 = AGB_2005_.updateMask(AGB_2005_.gt(0));
var AGB_recover2005_ratio = AGB_2005.float().divide(AGB_2000_reference.float()).multiply(100).toUint8().updateMask(AGB_2005.mask());

//map forest height and AGB regowth rate
//2020
var height_recover_rate2020 = forest_recover_time.multiply(b).exp().multiply(a).multiply(b).add(0.1).multiply(10).toUint8();
var AGB_recover_rate2020 = forest_recover_time.multiply(b).exp().multiply(d).multiply(a).multiply(b).multiply(e).multiply
      (forest_recover_time.multiply(b).exp().multiply(a).add(c).pow(e - 1)).add(0.1).multiply(10).toUint8();
//2015
var height_recover_rate2015 = frt2015.multiply(b).exp().multiply(a).multiply(b).add(0.1).multiply(10).toUint8();
var AGB_recover_rate2015 = frt2015.multiply(b).exp().multiply(d).multiply(a).multiply(b).multiply(e).multiply
      (frt2015.multiply(b).exp().multiply(a).add(c).pow(e - 1)).add(0.1).multiply(10).toUint8();
//2010
var height_recover_rate2010 = frt2010.multiply(b).exp().multiply(a).multiply(b).add(0.1).multiply(10).toUint8();
var AGB_recover_rate2010 = frt2010.multiply(b).exp().multiply(d).multiply(a).multiply(b).multiply(e).multiply
      (frt2010.multiply(b).exp().multiply(a).add(c).pow(e - 1)).add(0.1).multiply(10).toUint8();
//2005
var height_recover_rate2005 = frt2005.multiply(b).exp().multiply(a).multiply(b).add(0.1).multiply(10).toUint8();
var AGB_recover_rate2005 = frt2005.multiply(b).exp().multiply(d).multiply(a).multiply(b).multiply(e).multiply
      (frt2005.multiply(b).exp().multiply(a).add(c).pow(e - 1)).add(0.1).multiply(10).toUint8();

//add bands
var height_regrowth = recover_type2020.addBands([
                    height_recover2020_ratio, height_recover2015_ratio, height_recover2010_ratio, height_recover2005_ratio,
                    height_recover_rate2020, height_recover_rate2015, height_recover_rate2010, height_recover_rate2005,]).rename([
                    'Regrowth_type_2020',
                    'Height_regrowth_ratio_2020', 'Height_regrowth_ratio_2015', 'Height_regrowth_ratio_2010', 'Height_regrowth_ratio_2005',
                    'Height_regrowth_rate_2020', 'Height_regrowth_rate_2015', 'Height_regrowth_rate_2010', 'Height_regrowth_rate_2005']);
var AGB_regrowth = recover_type2020.addBands([
                    AGB_recover2020_ratio, AGB_recover2015_ratio, AGB_recover2010_ratio, AGB_recover2005_ratio,
                    AGB_recover_rate2020, AGB_recover_rate2015, AGB_recover_rate2010, AGB_recover_rate2005,]).rename([
                    'Regrowth_type_2020',
                    'AGB_regrowth_ratio_2020', 'AGB_regrowth_ratio_2015', 'AGB_regrowth_ratio_2010', 'AGB_regrowth_ratio_2005',
                    'AGB_regrowth_rate_2020', 'AGB_regrowth_rate_2015', 'AGB_regrowth_rate_2010', 'AGB_regrowth_rate_2005',]);

//****North_America****
//calculate virgin forest height
var gfc2022 = ee.Image('UMD/hansen/global_forest_change_2022_v1_10');
var lossyear = gfc2022.select(['lossyear']);
var lossyear2019 = lossyear.updateMask(lossyear.lt(20));
var virgin_forest_height= forest_height2020.updateMask(forest_2020.updateMask(canada_USA_recover_type2020.mask().not()).updateMask(lossyear2019.mask().not()).updateMask(recover_type2020.mask().not()));
var virgin_forest_statistics = virgin_forest_height.reduceRegion({reducer: ee.Reducer.mean().combine(ee.Reducer.stdDev(), '', true),geometry: North_America.geometry(),scale: 30,maxPixels: 1e13});
var meanValue = ee.FeatureCollection([ee.Feature(null, {'meanValue': virgin_forest_statistics.get('b1_mean')})]);
Export.table.toDrive({collection: meanValue,description: 'meanValue', folder: 'North_America_virginForestHeight',fileFormat: 'CSV'});

//map forest height and AGB regowth ratio
var a = -10.7; var b = -0.0885; var c = 14.23; var d = 0.1372; var e = 1.5512;
var height_1983_reference = 10;
var AGB_1983_reference = ee.Number(10).pow(e).multiply(d).multiply(10);//mean=9.64, SD=6.94
//2020
var height_2020_my_ = canada_USA_forest_recover_time.multiply(b).exp().multiply(a).add(c).toUint8();
var height_2020_my = height_2020_my_.updateMask(height_2020_my_.gt(2));
var height_recover2020_ratio = canada_USA_height_2020.float().divide(height_1983_reference).multiply(100).toUint8().updateMask(canada_USA_height_2020.mask());
var AGB_2020_=  canada_USA_height_2020.pow(e).multiply(d).add(0.1).multiply(10).toUint8();
var AGB_2020 = AGB_2020_.updateMask(AGB_2020_.gt(0));
var AGB_recover2020_ratio = AGB_2020.float().divide(AGB_1983_reference.float()).multiply(100).toUint8().updateMask(AGB_2020.mask());
//2015
var forest_recover_time2015 = canada_USA_forest_recover_time.subtract(5);
var frt2015 =  forest_recover_time2015.updateMask(forest_recover_time2015.gt(0));
var height_2015_ = frt2015.multiply(b).exp().multiply(a).add(c).toUint8();
var height_2015 = height_2015_.updateMask(height_2015_.gt(2));
var height_recover2015_ratio = height_2015.float().divide(height_1983_reference).multiply(100).toUint8().updateMask(height_2015.mask());
var AGB_2015_=  height_2015.float().pow(e).multiply(d).add(0.1).multiply(10).toUint8();
var AGB_2015 = AGB_2015_.updateMask(AGB_2015_.gt(0));
var AGB_recover2015_ratio = AGB_2015.float().divide(AGB_1983_reference.float()).multiply(100).toUint8().updateMask(AGB_2015.mask());
//2010
var forest_recover_time2010 = forest_recover_time2015.subtract(5);
var frt2010 =  forest_recover_time2010.updateMask(forest_recover_time2010.gt(0));
var height_2010_ = frt2010.multiply(b).exp().multiply(a).add(c).toUint8();
var height_2010 = height_2010_.updateMask(height_2010_.gt(2));
var height_recover2010_ratio = height_2010.float().divide(height_1983_reference).multiply(100).toUint8().updateMask(height_2010.mask());
var AGB_2010_=  height_2010.float().pow(e).multiply(d).add(0.1).multiply(10).toUint8();
var AGB_2010 = AGB_2010_.updateMask(AGB_2010_.gt(0));
var AGB_recover2010_ratio = AGB_2010.float().divide(AGB_1983_reference.float()).multiply(100).toUint8().updateMask(AGB_2010.mask());
//2005
var forest_recover_time2005 = forest_recover_time2010.subtract(5);
var frt2005 = forest_recover_time2005.updateMask(forest_recover_time2005.gt(0));
var height_2005_ = frt2005.multiply(b).exp().multiply(a).add(c).toUint8();
var height_2005 = height_2005_.updateMask(height_2005_.gt(2));
var height_recover2005_ratio = height_2005.float().divide(height_1983_reference).multiply(100).toUint8().updateMask(height_2005.mask());
var AGB_2005_=  height_2005.float().pow(e).multiply(d).add(0.1).multiply(10).toUint8();
var AGB_2005 = AGB_2005_.updateMask(AGB_2005_.gt(0));
var AGB_recover2005_ratio = AGB_2005.float().divide(AGB_1983_reference.float()).multiply(100).toUint8().updateMask(AGB_2005.mask());
//2000
var forest_recover_time2000 = forest_recover_time2005.subtract(5);
var frt2000 = forest_recover_time2000.updateMask(forest_recover_time2000.gt(0));
var height_2000_ = frt2000.multiply(b).exp().multiply(a).add(c).toUint8();
var height_2000 = height_2000_.updateMask(height_2000_.gt(2));
var height_recover2000_ratio = height_2000.float().divide(height_1983_reference).multiply(100).toUint8().updateMask(height_2000.mask());
var AGB_2000_=  height_2000.float().pow(e).multiply(d).add(0.1).multiply(10).toUint8();
var AGB_2000 = AGB_2000_.updateMask(AGB_2000_.gt(0));
var AGB_recover2000_ratio = AGB_2000.float().divide(AGB_1983_reference.float()).multiply(100).toUint8().updateMask(AGB_2000.mask());
//1995
var forest_recover_time1995 = forest_recover_time2000.subtract(5);
var frt1995 = forest_recover_time1995.updateMask(forest_recover_time1995.gt(0));
var height_1995_ = frt1995.multiply(b).exp().multiply(a).add(c).toUint8();
var height_1995 = height_1995_.updateMask(height_1995_.gt(2));
var height_recover1995_ratio = height_1995.float().divide(height_1983_reference).multiply(100).toUint8().updateMask(height_1995.mask());
var AGB_1995_=  height_1995.float().pow(e).multiply(d).add(0.1).multiply(10).toUint8();
var AGB_1995 = AGB_1995_.updateMask(AGB_1995_.gt(0));
var AGB_recover1995_ratio = AGB_1995.float().divide(AGB_1983_reference.float()).multiply(100).toUint8().updateMask(AGB_1995.mask());
//1990
var forest_recover_time1990 = forest_recover_time1995.subtract(5);
var frt1990 = forest_recover_time1990.updateMask(forest_recover_time1990.gt(0));
var height_1990_ = frt1990.multiply(b).exp().multiply(a).add(c).toUint8();
var height_1990 = height_1990_.updateMask(height_1990_.gt(2));
var height_recover1990_ratio = height_1990.float().divide(height_1983_reference).multiply(100).toUint8().updateMask(height_1990.mask());
var AGB_1990_=  height_1990.float().pow(e).multiply(d).add(0.1).multiply(10).toUint8();
var AGB_1990 = AGB_1990_.updateMask(AGB_1990_.gt(0));
var AGB_recover1990_ratio = AGB_1990.float().divide(AGB_1983_reference.float()).multiply(100).toUint8().updateMask(AGB_1990.mask());

//map forest height and AGB regowth rate
//2020
var height_recover_rate2020 = canada_USA_forest_recover_time.multiply(b).exp().multiply(a).multiply(b).add(0.1).multiply(10).toUint8();
var AGB_recover_rate2020 = canada_USA_forest_recover_time.multiply(b).exp().multiply(d).multiply(a).multiply(b).multiply(e).multiply
      (forest_recover_time.multiply(b).exp().multiply(a).add(c).pow(e - 1)).add(0.1).multiply(10).toUint8();
//2015
var height_recover_rate2015 = frt2015.multiply(b).exp().multiply(a).multiply(b).add(0.1).multiply(10).toUint8();
var AGB_recover_rate2015 = frt2015.multiply(b).exp().multiply(d).multiply(a).multiply(b).multiply(e).multiply
      (frt2015.multiply(b).exp().multiply(a).add(c).pow(e - 1)).add(0.1).multiply(10).toUint8();
//2010
var height_recover_rate2010 = frt2010.multiply(b).exp().multiply(a).multiply(b).add(0.1).multiply(10).toUint8();
var AGB_recover_rate2010 = frt2010.multiply(b).exp().multiply(d).multiply(a).multiply(b).multiply(e).multiply
      (frt2010.multiply(b).exp().multiply(a).add(c).pow(e - 1)).add(0.1).multiply(10).toUint8();
//2005
var height_recover_rate2005 = frt2005.multiply(b).exp().multiply(a).multiply(b).add(0.1).multiply(10).toUint8();
var AGB_recover_rate2005 = frt2005.multiply(b).exp().multiply(d).multiply(a).multiply(b).multiply(e).multiply
      (frt2005.multiply(b).exp().multiply(a).add(c).pow(e - 1)).add(0.1).multiply(10).toUint8();
//2000
var height_recover_rate2000 = frt2000.multiply(b).exp().multiply(a).multiply(b).add(0.1).multiply(10).toUint8();
var AGB_recover_rate2000 = frt2000.multiply(b).exp().multiply(d).multiply(a).multiply(b).multiply(e).multiply
      (frt2000.multiply(b).exp().multiply(a).add(c).pow(e - 1)).add(0.1).multiply(10).toUint8();
//1995
var height_recover_rate1995 = frt1995.multiply(b).exp().multiply(a).multiply(b).add(0.1).multiply(10).toUint8();
var AGB_recover_rate1995 = frt1995.multiply(b).exp().multiply(d).multiply(a).multiply(b).multiply(e).multiply
      (frt1995.multiply(b).exp().multiply(a).add(c).pow(e - 1)).add(0.1).multiply(10).toUint8();
//1990
var height_recover_rate1990 = frt1990.multiply(b).exp().multiply(a).multiply(b).add(0.1).multiply(10).toUint8();
var AGB_recover_rate1990 = frt1990.multiply(b).exp().multiply(d).multiply(a).multiply(b).multiply(e).multiply
      (frt1990.multiply(b).exp().multiply(a).add(c).pow(e - 1)).add(0.1).multiply(10).toUint8();

//map forest LAI and FPAR regowth ratio
//2020
var LAI_recover2020 = LAI250m_2020.updateMask(canada_USA_forest_recover_time.mask()).toUint8();
var FPAR_recover2020 = FPAR250m_2020.updateMask(canada_USA_forest_recover_time.mask()).toUint8();
var LAI_recover2020_ratio = LAI_recover2020.float().divide(LAI5km_1982.float()).multiply(100).toUint8().updateMask(LAI_recover2020.mask());
var FPAR_recover2020_ratio = FPAR_recover2020.float().divide(FPAR5km_1982.float()).multiply(100).toUint8().updateMask(FPAR_recover2020.mask());
//2015
var LAI_recover2015 = LAI250m_2015.updateMask(frt2015.mask()).toUint8();
var FPAR_recover2015 = FPAR250m_2015.updateMask(frt2015.mask()).toUint8();
var LAI_recover2015_ratio = LAI_recover2015.float().divide(LAI5km_1982.float()).multiply(100).toUint8().updateMask(LAI_recover2015.mask());
var FPAR_recover2015_ratio = FPAR_recover2015.float().divide(FPAR5km_1982.float()).multiply(100).toUint8().updateMask(FPAR_recover2015.mask());
//2010
var LAI_recover2010 = LAI250m_2010.updateMask(frt2010.mask()).toUint8();
var FPAR_recover2010 = FPAR250m_2010.updateMask(frt2010.mask()).toUint8();
var LAI_recover2010_ratio = LAI_recover2010.float().divide(LAI5km_1982.float()).multiply(100).toUint8().updateMask(LAI_recover2010.mask());
var FPAR_recover2010_ratio = FPAR_recover2010.float().divide(FPAR5km_1982.float()).multiply(100).toUint8().updateMask(FPAR_recover2010.mask());
//2005
var LAI_recover2005 = LAI250m_2005.updateMask(frt2005.mask()).toUint8();
var FPAR_recover2005 = FPAR250m_2005.updateMask(frt2005.mask()).toUint8();
var LAI_recover2005_ratio = LAI_recover2005.float().divide(LAI5km_1982.float()).multiply(100).toUint8().updateMask(LAI_recover2005.mask());
var FPAR_recover2005_ratio = FPAR_recover2005.float().divide(FPAR5km_1982.float()).multiply(100).toUint8().updateMask(FPAR_recover2005.mask());
//2000
var LAI_recover2000 = LAI250m_2000.updateMask(frt2000.mask()).toUint8();
var FPAR_recover2000 = FPAR250m_2000.updateMask(frt2000.mask()).toUint8();
var LAI_recover2000_ratio = LAI_recover2000.float().divide(LAI5km_1982.float()).multiply(100).toUint8().updateMask(LAI_recover2000.mask());
var FPAR_recover2000_ratio = FPAR_recover2000.float().divide(FPAR5km_1982.float()).multiply(100).toUint8().updateMask(FPAR_recover2000.mask());
//1995
var LAI_recover1995 = LAI5km_1995.updateMask(frt1995.mask()).toUint8();
var FPAR_recover1995 = FPAR5km_1995.updateMask(frt1995.mask()).toUint8();
var LAI_recover1995_ratio = LAI_recover1995.float().divide(LAI5km_1982.float()).multiply(100).toUint8().updateMask(LAI_recover1995.mask());
var FPAR_recover1995_ratio = FPAR_recover1995.float().divide(FPAR5km_1982.float()).multiply(100).toUint8().updateMask(FPAR_recover1995.mask());
//1990
var LAI_recover1990 = LAI5km_1990.updateMask(frt1990.mask()).toUint8();
var FPAR_recover1990 = FPAR5km_1990.updateMask(frt1990.mask()).toUint8();
var LAI_recover1990_ratio = LAI_recover1990.float().divide(LAI5km_1982.float()).multiply(100).toUint8().updateMask(LAI_recover1990.mask());
var FPAR_recover1990_ratio = FPAR_recover1990.float().divide(FPAR5km_1982.float()).multiply(100).toUint8().updateMask(FPAR_recover1990.mask());

//map forest LAI and FPAR regowth rate
var LAI_recover2021 = LAI250m_2021.updateMask(canada_USA_forest_recover_time.mask()).toUint8();
var LAI_recover2019 = LAI250m_2019.updateMask(canada_USA_forest_recover_time.mask()).toUint8();
var LAI_recover2016 = LAI250m_2016.updateMask(frt2015.mask()).toUint8();
var LAI_recover2014 = LAI250m_2014.updateMask(frt2015.mask()).toUint8();
var LAI_recover2011 = LAI250m_2011.updateMask(frt2010.mask()).toUint8();
var LAI_recover2009 = LAI250m_2009.updateMask(frt2010.mask()).toUint8();
var LAI_recover2006 = LAI250m_2006.updateMask(frt2005.mask()).toUint8();
var LAI_recover2004 = LAI250m_2004.updateMask(frt2005.mask()).toUint8();
var LAI_recover2001 = LAI250m_2001.updateMask(frt2000.mask()).toUint8();
var LAI_recover1999 = LAI5km_1999.updateMask(frt2000.mask()).toUint8();
var LAI_recover1996 = LAI5km_1996.updateMask(frt1995.mask()).toUint8();
var LAI_recover1994 = LAI5km_1994.updateMask(frt1995.mask()).toUint8();
var LAI_recover1991 = LAI5km_1991.updateMask(frt1990.mask()).toUint8();
var LAI_recover1989 = LAI5km_1989.updateMask(frt1990.mask()).toUint8();
var FPAR_recover2021 = FPAR250m_2021.updateMask(canada_USA_forest_recover_time.mask()).toUint8();
var FPAR_recover2019 = FPAR250m_2019.updateMask(canada_USA_forest_recover_time.mask()).toUint8();
var FPAR_recover2016 = FPAR250m_2016.updateMask(frt2015.mask()).toUint8();
var FPAR_recover2014 = FPAR250m_2014.updateMask(frt2015.mask()).toUint8();
var FPAR_recover2011 = FPAR250m_2011.updateMask(frt2010.mask()).toUint8();
var FPAR_recover2009 = FPAR250m_2009.updateMask(frt2010.mask()).toUint8();
var FPAR_recover2006 = FPAR250m_2006.updateMask(frt2005.mask()).toUint8();
var FPAR_recover2004 = FPAR250m_2004.updateMask(frt2005.mask()).toUint8();
var FPAR_recover2001 = FPAR250m_2001.updateMask(frt2000.mask()).toUint8();
var FPAR_recover1999 = FPAR5km_1999.updateMask(frt2000.mask()).toUint8();
var FPAR_recover1996 = FPAR5km_1996.updateMask(frt1995.mask()).toUint8();
var FPAR_recover1994 = FPAR5km_1994.updateMask(frt1995.mask()).toUint8();
var FPAR_recover1991 = FPAR5km_1991.updateMask(frt1990.mask()).toUint8();
var FPAR_recover1989 = FPAR5km_1989.updateMask(frt1990.mask()).toUint8();
//2020
var LAI_recover_rate2020_ = (LAI_recover2021.subtract(LAI_recover2019)).divide(2);
var LAI_recover_rate2020 = LAI_recover_rate2020_.where(LAI_recover_rate2020_.lt(0.1),0.1).multiply(10).toUint8();
var FPAR_recover_rate2020_ = (FPAR_recover2021.subtract(FPAR_recover2019)).divide(2);
var FPAR_recover_rate2020 = FPAR_recover_rate2020_.where(FPAR_recover_rate2020_.lt(0.1),0.1).multiply(10).toUint8();
//2015
var LAI_recover_rate2015_ = (LAI_recover2016.subtract(LAI_recover2014)).divide(2);
var LAI_recover_rate2015 = LAI_recover_rate2015_.where(LAI_recover_rate2015_.lt(0.1),0.1).multiply(10).toUint8();
var FPAR_recover_rate2015_ = (FPAR_recover2016.subtract(FPAR_recover2014)).divide(2);
var FPAR_recover_rate2015 = FPAR_recover_rate2015_.where(FPAR_recover_rate2015_.lt(0.1),0.1).multiply(10).toUint8();
//2010
var LAI_recover_rate2010_ = (LAI_recover2011.subtract(LAI_recover2009)).divide(2);
var LAI_recover_rate2010 = LAI_recover_rate2010_.where(LAI_recover_rate2010_.lt(0.1),0.1).multiply(10).toUint8();
var FPAR_recover_rate2010_ = (FPAR_recover2011.subtract(FPAR_recover2009)).divide(2);
var FPAR_recover_rate2010 = FPAR_recover_rate2010_.where(FPAR_recover_rate2010_.lt(0.1),0.1).multiply(10).toUint8();
//2005
var LAI_recover_rate2005_ = (LAI_recover2006.subtract(LAI_recover2004)).divide(2);
var LAI_recover_rate2005 = LAI_recover_rate2005_.where(LAI_recover_rate2005_.lt(0.1),0.1).multiply(10).toUint8();
var FPAR_recover_rate2005_ = (FPAR_recover2006.subtract(FPAR_recover2004)).divide(2);
var FPAR_recover_rate2005 = FPAR_recover_rate2005_.where(FPAR_recover_rate2005_.lt(0.1),0.1).multiply(10).toUint8();
//2000
var LAI_recover_rate2000_ = (LAI_recover2001.subtract(LAI_recover1999)).divide(2);
var LAI_recover_rate2000 = LAI_recover_rate2000_.where(LAI_recover_rate2000_.lt(0.1),0.1).multiply(10).toUint8();
var FPAR_recover_rate2000_ = (FPAR_recover2001.subtract(FPAR_recover1999)).divide(2);
var FPAR_recover_rate2000 = FPAR_recover_rate2000_.where(FPAR_recover_rate2000_.lt(0.1),0.1).multiply(10).toUint8();
//1995
var LAI_recover_rate1995_ = (LAI_recover1996.subtract(LAI_recover1994)).divide(2);
var LAI_recover_rate1995 = LAI_recover_rate1995_.where(LAI_recover_rate1995_.lt(0.1),0.1).multiply(10).toUint8();
var FPAR_recover_rate1995_ = (FPAR_recover1996.subtract(FPAR_recover1994)).divide(2);
var FPAR_recover_rate1995 = FPAR_recover_rate1995_.where(FPAR_recover_rate1995_.lt(0.1),0.1).multiply(10).toUint8();
//1990
var LAI_recover_rate1990_ = (LAI_recover1991.subtract(LAI_recover1989)).divide(2);
var LAI_recover_rate1990 = LAI_recover_rate1990_.where(LAI_recover_rate1990_.lt(0.1),0.1).multiply(10).toUint8();
var FPAR_recover_rate1990_ = (FPAR_recover1991.subtract(FPAR_recover1989)).divide(2);
var FPAR_recover_rate1990 = FPAR_recover_rate1990_.where(FPAR_recover_rate1990_.lt(0.1),0.1).multiply(10).toUint8();

//add bands
var height_regrowth = canada_USA_recover_type2020.addBands([
                    height_recover2020_ratio, height_recover2015_ratio, height_recover2010_ratio, height_recover2005_ratio,
                    height_recover2000_ratio, height_recover1995_ratio, height_recover1990_ratio,
                    height_recover_rate2020, height_recover_rate2015, height_recover_rate2010, height_recover_rate2005,
                    height_recover_rate2000, height_recover_rate1995, height_recover_rate1990]).rename([
                    'Regrowth_type_2020',
                    'Height_regrowth_ratio_2020', 'Height_regrowth_ratio_2015', 'Height_regrowth_ratio_2010', 'Height_regrowth_ratio_2005',
                    'Height_regrowth_ratio_2000', 'Height_regrowth_ratio_1995', 'Height_regrowth_ratio_1990', 
                    'Height_regrowth_rate_2020', 'Height_regrowth_rate_2015', 'Height_regrowth_rate_2010', 'Height_regrowth_rate_2005',
                    'Height_regrowth_rate_2000', 'Height_regrowth_rate_1995', 'Height_regrowth_rate_1990']);
var AGB_regrowth = canada_USA_recover_type2020.addBands([
                    AGB_recover2020_ratio, AGB_recover2015_ratio, AGB_recover2010_ratio, AGB_recover2005_ratio,
                    AGB_recover2000_ratio, AGB_recover1995_ratio, AGB_recover1990_ratio,
                    AGB_recover_rate2020, AGB_recover_rate2015, AGB_recover_rate2010, AGB_recover_rate2005,
                    AGB_recover_rate2000, AGB_recover_rate1995, AGB_recover_rate1990]).rename([
                    'Regrowth_type_2020',
                    'AGB_regrowth_ratio_2020', 'AGB_regrowth_ratio_2015', 'AGB_regrowth_ratio_2010', 'AGB_regrowth_ratio_2005',
                    'AGB_regrowth_ratio_2000', 'AGB_regrowth_ratio_1995', 'AGB_regrowth_ratio_1990', 
                    'AGB_regrowth_rate_2020', 'AGB_regrowth_rate_2015', 'AGB_regrowth_rate_2010', 'AGB_regrowth_rate_2005',
                    'AGB_regrowth_rate_2000', 'AGB_regrowth_rate_1995', 'AGB_regrowth_rate_1990']);
var LAI_regrowth = canada_USA_recover_type2020.addBands([
                    LAI_recover2020_ratio, LAI_recover2015_ratio, LAI_recover2010_ratio, LAI_recover2005_ratio,
                    LAI_recover2000_ratio, LAI_recover1995_ratio, LAI_recover1990_ratio,
                    LAI_recover_rate2020, LAI_recover_rate2015, LAI_recover_rate2010, LAI_recover_rate2005,
                    LAI_recover_rate2000, LAI_recover_rate1995, LAI_recover_rate1990]).rename([
                    'Regrowth_type_2020',
                    'LAI_regrowth_ratio_2020', 'LAI_regrowth_ratio_2015', 'LAI_regrowth_ratio_2010', 'LAI_regrowth_ratio_2005',
                    'LAI_regrowth_ratio_2000', 'LAI_regrowth_ratio_1995', 'LAI_regrowth_ratio_1990',
                    'LAI_regrowth_rate_2020', 'LAI_regrowth_rate_2015', 'LAI_regrowth_rate_2010', 'LAI_regrowth_rate_2005',
                    'LAI_regrowth_rate_2000', 'LAI_regrowth_rate_1995', 'LAI_regrowth_rate_1990']);
var FPAR_regrowth = canada_USA_recover_type2020.addBands([
                    FPAR_recover2020_ratio, FPAR_recover2015_ratio, FPAR_recover2010_ratio, FPAR_recover2005_ratio,
                    FPAR_recover2000_ratio, FPAR_recover1995_ratio, FPAR_recover1990_ratio,
                    FPAR_recover_rate2020, FPAR_recover_rate2015, FPAR_recover_rate2010, FPAR_recover_rate2005, 
                    FPAR_recover_rate2000, FPAR_recover_rate1995, FPAR_recover_rate1990,]).rename([
                    'Regrowth_type_2020',
                    'FPAR_regrowth_ratio_2020', 'FPAR_regrowth_ratio_2015', 'FPAR_regrowth_ratio_2010', 'FPAR_regrowth_ratio_2005',
                    'FPAR_regrowth_ratio_2000', 'FPAR_regrowth_ratio_1995', 'FPAR_regrowth_ratio_1990',
                    'FPAR_regrowth_rate_2020', 'FPAR_regrowth_rate_2015', 'FPAR_regrowth_rate_2010', 'FPAR_regrowth_rate_2005',
                    'FPAR_regrowth_rate_2000', 'FPAR_regrowth_rate_1995', 'FPAR_regrowth_rate_1990']);
